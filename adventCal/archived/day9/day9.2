using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp1
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Program start.");
            StreamReader file = new StreamReader("input.txt");
            int counter = 0;
            string line;
            //List<string> lines = new List<string>();
            List<long> lines = new List<long>();
            while ((line = file.ReadLine()) != null)
            {
                //if (counter == 3)
                //{
                //    break;
                //}

                lines.Add(long.Parse(line));
                counter++;
            }

            file.Close();

            List<long> contig = new List<long>();
            long LOOK_NUM = 1639024365;
            long contigSum = 0;

            for (int i = 0; i < lines.Count; i++)
            {
                contigSum += lines[i];
                if (contigSum > LOOK_NUM)
                {
                    contigSum = 0;
                    continue;
                }
                else
                {
                    for (int j = i + 1; j < lines.Count; j++)
                    {
                        
                        if (contigSum > LOOK_NUM)
                        {
                            contigSum = 0;
                            break;
                        }
                        else
                        {
                            contigSum += lines[j];
                            if (contigSum == LOOK_NUM)
                            {
                                Console.WriteLine($"FOUND! from {lines[i]} (line{i}) to {lines[j]} (line{j})");
                            }
                        }
                    }
                }
                
            }


            var foundRange = lines.GetRange(537, 17);
            Display(foundRange);
            long smallest = foundRange.Min();
            long largest = foundRange.Max();
            Console.WriteLine($"Answer: {smallest + largest}");
            Console.WriteLine($"\n{counter} lines read");
            Console.WriteLine("Program done.");

        }

        public static List<string> DeepCopy(List<string> lines)
        {
            List<string> result = new List<string>();
            foreach (string str in lines)
            {
                result.Add(str);
            }
            return result;
        }


        public static bool ResultInLoop(List<string> lines)
        {
            int accumulator = 0;
            List<int> visited = new List<int>();
            int curIndex = 0;
            while (visited.Contains(curIndex) == false)
            {
                
                visited.Add(curIndex);

                if (curIndex > lines.Count - 1)
                {
                    Console.WriteLine("Terminated!");
                    Console.WriteLine($" accumulator: {accumulator}");
                    return false;
                }
                string curLine = lines[curIndex];
                if (curIndex == lines.Count - 1)
                {
                    Console.WriteLine("You are at the last instruction line!");
                    Console.WriteLine($" last line: {curLine}");
                }
                
                
                //Console.WriteLine($"curIndex: {curIndex}");
                //Console.WriteLine($"   curLine: {curLine}");
                string[] split = curLine.Split(' ');
                int value = Int32.Parse(split[1]);
                //Console.WriteLine($"  value: {value}");
                //foreach (string ele in split)
                //{
                //    Console.WriteLine($"   {ele}");
                //}

                if (split[0] == "acc")
                {
                    accumulator += value;
                }
                else if (split[0] == "jmp")
                {
                    curIndex += value;
                    continue;
                }
                else
                {
                    // "nop" -> do nothing    
                }
                curIndex++;
            }
            Console.WriteLine("Infinite Loop!");
            return true;
        }

        

        //}
        public static void Display<T>(List<T> arr, params string[] parameters)
        {
            //foreach (int num in arr)
            //{
            //    Console.WriteLine(num);
            //}
            arr.ForEach(x => Console.WriteLine(x));
        }

        public static void DisplayListList(List<List<string>> listArr)
        {
            foreach (List<string> arr in listArr)
            {
                Console.WriteLine(arr[0]);
                Console.WriteLine($"   {arr[1]}");
            }
        }

        //public static void Display(List<string> arr)
        //{
        //    foreach (string str in arr)
        //    {
        //        Console.WriteLine(str);
        //    }
        //}
    }
}
